{"version":3,"file":"index.js","sources":["../../index.ts"],"sourcesContent":["// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-assignment\nexport const OWNER: unique symbol = Symbol('OWNER') as any;\n\ninterface OwnedObject<O extends object> {\n  [OWNER]: O | undefined;\n}\n\n/**\n  Framework objects in a Glimmer application may receive an owner object.\n  Glimmer is unopinionated about this owner, but will forward it through its\n  internal resolution system, and through its managers if it is provided.\n*/\nexport function getOwner(object: object): object | undefined {\n  return (object as OwnedObject<object>)[OWNER];\n}\n\n/**\n  `setOwner` set's an object's owner\n*/\nexport function setOwner(object: object, owner: object): void {\n  (object as OwnedObject<object>)[OWNER] = owner;\n}\n"],"names":["OWNER","Symbol","getOwner","object","setOwner","owner"],"mappings":"AACO,MAAMA,EAAuBC,OAAO,SAWpC,SAASC,EAASC,GACvB,OAAQA,EAA+BH,EACzC,CAKO,SAASI,EAASD,EAAgBE,GACtCF,EAA+BH,GAASK,CAC3C"}