{"version":3,"file":"inserter.js","sourceRoot":"","sources":["../ts/inserter.ts"],"names":[],"mappings":"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","sourcesContent":["import type { InputNode } from 'broccoli-node-api';\nimport Plugin from 'broccoli-plugin';\nimport makeDebug from 'debug';\nimport { existsSync, readFileSync } from 'fs';\nimport { outputFileSync, readJSONSync } from 'fs-extra';\nimport { join } from 'path';\nimport parse5 from 'parse5';\nimport BundleConfig from './bundle-config';\nimport { Bundler } from './bundler';\n\nconst debug = makeDebug('ember-auto-import:inserter');\n\nexport interface InserterOptions {\n  publicAssetURL: string;\n  insertScriptsAt: string | undefined;\n  insertStylesAt: string | undefined;\n}\n\ninterface Targets {\n  // bundle name to scriptChunks\n  scripts: Record<string, string[]>;\n\n  // bundle name to styleChunks\n  styles: Record<string, string[]>;\n}\n\nexport class Inserter extends Plugin {\n  private outputCache = new Map<string, string>();\n\n  constructor(\n    allApp: InputNode,\n    private bundler: Bundler,\n    private config: BundleConfig,\n    private options: InserterOptions\n  ) {\n    super([allApp], {\n      annotation: 'ember-auto-import-inserter',\n      persistentOutput: true,\n    });\n  }\n  async build() {\n    let fastbootInfo = this.fastbootManifestInfo();\n    let chunks = this.categorizeChunks();\n    for (let filename of this.config.htmlEntrypoints()) {\n      let fullName = join(this.inputPaths[0], filename);\n      if (existsSync(fullName)) {\n        this.processHTML(filename, fullName, fastbootInfo, chunks);\n      }\n    }\n\n    if (fastbootInfo && !fastbootInfo.readsHTML) {\n      // we need to add our chunks to the fastboot manifest, because this\n      // version of fastboot doesn't look for scripts in HTML.\n      let assets = this.bundler.buildResult.entrypoints.get('app');\n      if (assets) {\n        for (let asset of assets) {\n          if (asset.endsWith('.js')) {\n            fastbootInfo.vendorFiles.push(asset);\n          }\n        }\n      }\n      for (let asset of this.bundler.buildResult.lazyAssets) {\n        if (asset.endsWith('.js')) {\n          fastbootInfo.vendorFiles.push(asset);\n        }\n      }\n\n      this.cachedOutputFileSync(\n        'package.json',\n        JSON.stringify(fastbootInfo.pkg, null, 2)\n      );\n    }\n  }\n\n  // not touching our output files helps prevent other parts of the build from\n  // reacting to spurious changes. For example, if we touch the HTML, we defeat\n  // CSS hot reloading by making ember-cli think the HTML file has changed.\n  private cachedOutputFileSync(localFilename: string, content: string) {\n    if (this.outputCache.get(localFilename) !== content) {\n      this.outputCache.set(localFilename, content);\n      outputFileSync(join(this.outputPath, localFilename), content, 'utf8');\n    }\n  }\n\n  private processHTML(\n    filename: string,\n    fullName: string,\n    fastbootInfo: ReturnType<typeof Inserter.prototype.fastbootManifestInfo>,\n    targets: Targets\n  ) {\n    debug(`parsing %s`, filename);\n    let html = readFileSync(fullName, 'utf8');\n    let ast = parse5.parse(html, { sourceCodeLocationInfo: true });\n    let stringInserter = new StringInserter(html);\n\n    if (this.options.insertScriptsAt) {\n      debug(\n        `looking for custom script element: %s`,\n        this.options.insertScriptsAt\n      );\n    } else {\n      debug(\n        `looking for scripts with src: %s`,\n        Object.keys(targets.scripts)\n          .map((bundleName) =>\n            this.config.maybeBundleEntrypoint(bundleName, 'js')\n          )\n          .filter(Boolean)\n      );\n    }\n\n    if (this.options.insertStylesAt) {\n      debug(\n        `looking for custom style element: %s`,\n        this.options.insertStylesAt\n      );\n    } else {\n      debug(\n        `looking for link with href: %s`,\n        Object.keys(targets.styles)\n          .map((bundleName) =>\n            this.config.maybeBundleEntrypoint(bundleName, 'css')\n          )\n          .filter(Boolean)\n      );\n    }\n\n    if (this.includesTests(ast)) {\n      targets = useTestTargets(targets);\n    }\n\n    let inserted: { kind: 'script' | 'styles'; bundleName: string }[] = [];\n\n    traverse(ast, (element) => {\n      if (this.options.insertScriptsAt) {\n        if (element.tagName === this.options.insertScriptsAt) {\n          let entrypoint = element.attrs.find((a) => a.name === 'entrypoint');\n          if (!entrypoint) {\n            throw new Error(\n              `<${element.tagName}/> element in ${filename} is missing required entrypoint attribute`\n            );\n          }\n          this.replaceCustomScript(\n            targets,\n            fastbootInfo,\n            stringInserter,\n            element,\n            entrypoint.value,\n            inserted\n          );\n        }\n      } else if (element.tagName === 'script') {\n        let src = element.attrs.find((a) => a.name === 'src')?.value;\n        if (src) {\n          debug(`found script with src=%s`, src);\n          this.insertScripts(\n            targets,\n            fastbootInfo,\n            stringInserter,\n            element,\n            src,\n            inserted\n          );\n        }\n      }\n\n      if (this.options.insertStylesAt) {\n        if (element.tagName === this.options.insertStylesAt) {\n          let entrypoint = element.attrs.find((a) => a.name === 'entrypoint');\n          if (!entrypoint) {\n            throw new Error(\n              `<${element.tagName}/> element in ${filename} is missing required entrypoint attribute`\n            );\n          }\n          this.replaceCustomStyle(\n            targets,\n            stringInserter,\n            element,\n            entrypoint.value,\n            inserted\n          );\n        }\n      } else if (element.tagName === 'link') {\n        if (\n          element.attrs.some(\n            (a) => a.name === 'rel' && a.value === 'stylesheet'\n          )\n        ) {\n          let href = element.attrs.find((a) => a.name === 'href')?.value;\n          if (href) {\n            debug(`found stylesheet with href=%s`, href);\n            this.insertStyles(targets, stringInserter, element, href, inserted);\n          }\n        }\n      }\n    });\n\n    if (\n      targets.scripts.app &&\n      !inserted.find((i) => i.bundleName === 'app' && i.kind === 'script')\n    ) {\n      if (this.options.insertScriptsAt) {\n        throw new Error(\n          `ember-auto-import cannot find <${this.options.insertScriptsAt} entrypoint=\"app\"> in ${filename}.`\n        );\n      } else {\n        throw new Error(\n          `ember-auto-import could not find a place to insert app scripts in ${filename}.`\n        );\n      }\n    }\n\n    if (\n      targets.styles.app &&\n      !inserted.find((i) => i.bundleName === 'app' && i.kind === 'styles')\n    ) {\n      if (this.options.insertStylesAt) {\n        throw new Error(\n          `ember-auto-import cannot find <${this.options.insertStylesAt} entrypoint=\"app\"> in ${filename}.`\n        );\n      } else {\n        throw new Error(\n          `ember-auto-import could not find a place to insert app styles in ${filename}.`\n        );\n      }\n    }\n\n    this.cachedOutputFileSync(filename, stringInserter.serialize());\n  }\n\n  private insertScripts(\n    targets: Targets,\n    fastbootInfo: ReturnType<typeof Inserter.prototype.fastbootManifestInfo>,\n    stringInserter: StringInserter,\n    element: parse5.Element,\n    src: string,\n    inserted: { kind: 'script' | 'styles'; bundleName: string }[]\n  ) {\n    let bundleName = this.config.bundleNameForEntrypoint(src, 'js');\n    if (!bundleName) {\n      return;\n    }\n    let scriptChunks = targets.scripts[bundleName];\n    if (!scriptChunks) {\n      return;\n    }\n    inserted.push({ bundleName, kind: 'script' });\n    debug(`inserting %s`, scriptChunks);\n    let insertedSrc = scriptChunks\n      .map((chunk) => `\\n<script src=\"${this.chunkURL(chunk)}\"></script>`)\n      .join('');\n    if (fastbootInfo?.readsHTML && bundleName === 'app') {\n      // lazy chunks are eager in fastboot because webpack's lazy\n      // loading doesn't work in fastboot, because we share a single\n      // build with the browser and use a browser-specific\n      // lazy-loading implementation. It's probably better to make\n      // them eager on the server anyway, so they're handled as part\n      // of server startup.\n      insertedSrc += this.bundler.buildResult.lazyAssets\n        .map(\n          (chunk) =>\n            `\\n<fastboot-script src=\"${this.chunkURL(\n              chunk\n            )}\"></fastboot-script>`\n        )\n        .join('');\n    }\n    stringInserter.insert(element.sourceCodeLocation!.endOffset, insertedSrc);\n  }\n\n  private replaceCustomScript(\n    targets: Targets,\n    fastbootInfo: ReturnType<typeof Inserter.prototype.fastbootManifestInfo>,\n    stringInserter: StringInserter,\n    element: parse5.Element,\n    bundleName: string,\n    insertedEntrypoints: { kind: 'script' | 'styles'; bundleName: string }[]\n  ) {\n    let loc = element.sourceCodeLocation!;\n    stringInserter.remove(loc.startOffset, loc.endOffset - loc.startOffset);\n    let scriptChunks = targets.scripts[bundleName];\n    if (!scriptChunks) {\n      return;\n    }\n    insertedEntrypoints.push({ bundleName, kind: 'script' });\n    debug(`inserting %s`, scriptChunks);\n    let tags = scriptChunks.map((chunk) =>\n      this.scriptFromCustomElement(element, chunk)\n    );\n    if (fastbootInfo?.readsHTML && bundleName === 'app') {\n      // lazy chunks are eager in fastboot because webpack's lazy\n      // loading doesn't work in fastboot, because we share a single\n      // build with the browser and use a browser-specific\n      // lazy-loading implementation. It's probably better to make\n      // them eager on the server anyway, so they're handled as part\n      // of server startup.\n      tags = tags.concat(\n        this.bundler.buildResult.lazyAssets.map((chunk) =>\n          this.scriptFromCustomElement(element, chunk, 'fastboot-script')\n        )\n      );\n    }\n    stringInserter.insert(loc.endOffset, tags.join('\\n'));\n  }\n\n  private replaceCustomStyle(\n    targets: Targets,\n    stringInserter: StringInserter,\n    element: parse5.Element,\n    bundleName: string,\n    inserted: { kind: 'script' | 'styles'; bundleName: string }[]\n  ) {\n    let loc = element.sourceCodeLocation!;\n    stringInserter.remove(loc.startOffset, loc.endOffset - loc.startOffset);\n    let styleChunks = targets.styles[bundleName];\n    if (!styleChunks) {\n      return;\n    }\n    inserted.push({ kind: 'styles', bundleName });\n    debug(`inserting %s`, styleChunks);\n    let tags = styleChunks.map((chunk) =>\n      this.styleFromCustomElement(element, chunk)\n    );\n    stringInserter.insert(loc.endOffset, tags.join('\\n'));\n  }\n\n  private scriptFromCustomElement(\n    element: parse5.Element,\n    chunk: string,\n    tag = 'script'\n  ) {\n    let output = `<${tag} src=\"${this.chunkURL(chunk)}\"`;\n    for (let { name, value } of element.attrs) {\n      if (name !== 'entrypoint') {\n        output += ` ${name}`;\n        if (value) {\n          output += `=\"${value}\"`;\n        }\n      }\n    }\n    output += `></${tag}>`;\n    return output;\n  }\n\n  private styleFromCustomElement(element: parse5.Element, chunk: string) {\n    let output = `<link rel=\"stylesheet\" href=\"${this.chunkURL(chunk)}\"`;\n    for (let { name, value } of element.attrs) {\n      if (name !== 'entrypoint') {\n        output += ` ${name}`;\n        if (value) {\n          output += `=\"${value}\"`;\n        }\n      }\n    }\n    output += `/>`;\n    return output;\n  }\n\n  private insertStyles(\n    targets: Targets,\n    stringInserter: StringInserter,\n    element: parse5.Element,\n    href: string,\n    inserted: { kind: 'script' | 'styles'; bundleName: string }[]\n  ) {\n    let bundleName = this.config.bundleNameForEntrypoint(href, 'css');\n    if (!bundleName) {\n      return;\n    }\n    let styleChunks = targets.styles[bundleName];\n    if (!styleChunks) {\n      return;\n    }\n    inserted.push({ kind: 'styles', bundleName });\n    debug(`inserting %s`, styleChunks);\n    stringInserter.insert(\n      element.sourceCodeLocation!.endOffset,\n      styleChunks\n        .map(\n          (chunk) => `\\n<link rel=\"stylesheet\" href=\"${this.chunkURL(chunk)}\"/>`\n        )\n        .join('')\n    );\n  }\n\n  private chunkURL(chunk: string) {\n    return chunk.replace(/^assets\\//, this.options.publicAssetURL);\n  }\n\n  private fastbootManifestInfo():\n    | { readsHTML: true }\n    | { readsHTML: false; pkg: any; vendorFiles: string[] }\n    | undefined {\n    let pkgPath = join(this.inputPaths[0], 'package.json');\n    if (!existsSync(pkgPath)) {\n      return undefined;\n    }\n    let pkg = readJSONSync(pkgPath);\n    if (!pkg.fastboot) {\n      return undefined;\n    }\n    if ((pkg.fastboot.schemaVersion ?? 0) >= 5) {\n      // starting in schemaVersion 5, fastboot discovers scripts directly from\n      // the HTML, so we don't need to muck about with inserting things into a\n      // separate manifest\n      return { readsHTML: true };\n    } else {\n      if (!pkg.fastboot.manifest?.vendorFiles) {\n        throw new Error(\n          `bug: ember-auto-import can't find the fastboot manifest vendorFiles`\n        );\n      }\n      return {\n        pkg,\n        readsHTML: false,\n        vendorFiles: pkg.fastboot.manifest.vendorFiles,\n      };\n    }\n  }\n\n  private categorizeChunks(): Targets {\n    let targets: Targets = {\n      scripts: {},\n      styles: {},\n    };\n    for (let [bundleName, assets] of this.bundler.buildResult.entrypoints) {\n      let jsChunks = assets.filter((a) => a.endsWith('.js'));\n      if (jsChunks.length > 0) {\n        targets.scripts[bundleName] = jsChunks;\n      }\n      let cssChunks = assets.filter((a) => a.endsWith('.css'));\n      if (cssChunks.length > 0) {\n        targets.styles[bundleName] = cssChunks;\n      }\n    }\n    return targets;\n  }\n\n  private includesTests(ast: parse5.Document): boolean {\n    let foundTests = false;\n    traverse(ast, (element) => {\n      if (this.options.insertScriptsAt) {\n        if (element.tagName === this.options.insertScriptsAt) {\n          let entrypoint = element.attrs.find((a) => a.name === 'entrypoint');\n          if (entrypoint?.value === 'tests') {\n            foundTests = true;\n          }\n        }\n      } else {\n        if (element.tagName === 'script') {\n          let src = element.attrs.find((a) => a.name === 'src')?.value;\n          if (\n            src &&\n            this.config.bundleNameForEntrypoint(src, 'js') === 'tests'\n          ) {\n            foundTests = true;\n          }\n        }\n      }\n    });\n    return foundTests;\n  }\n}\n\nclass StringInserter {\n  private mutations: (\n    | {\n        type: 'insert';\n        location: number;\n        str: string;\n      }\n    | {\n        type: 'remove';\n        location: number;\n        length: number;\n      }\n  )[] = [];\n  constructor(private original: string) {}\n  insert(location: number, str: string) {\n    this.mutations.push({ type: 'insert', location, str });\n  }\n  remove(location: number, length: number) {\n    this.mutations.push({ type: 'remove', location, length });\n  }\n  serialize(): string {\n    let output: string[] = [];\n    let mutations = this.mutations\n      .slice()\n      .sort((a, b) => a.location - b.location);\n    let cursor = 0;\n    while (mutations.length > 0) {\n      let nextMutation = mutations.shift()!;\n      output.push(this.original.slice(cursor, nextMutation.location));\n      if (nextMutation.type === 'insert') {\n        output.push(nextMutation.str);\n        cursor = nextMutation.location;\n      } else {\n        cursor = nextMutation.location + nextMutation.length;\n      }\n    }\n    output.push(this.original.slice(cursor));\n    return output.join('');\n  }\n}\n\nfunction traverse(node: parse5.ParentNode, fn: (elt: parse5.Element) => void) {\n  if ('tagName' in node) {\n    fn(node);\n  }\n\n  for (let child of node.childNodes) {\n    if ('childNodes' in child) {\n      traverse(child, fn);\n    }\n  }\n}\n\nfunction useTestTargets(targets: Targets): Targets {\n  return {\n    styles: targets.styles,\n    scripts: {\n      ...targets.scripts,\n      app: targets.scripts.tests,\n      tests: [],\n    },\n  };\n}\n"]}