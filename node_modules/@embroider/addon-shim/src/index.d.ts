import { AddonInstance, AddonMeta } from '@embroider/shared-internals';
export interface ShimOptions {
    disabled?: (options: any) => boolean;
    autoImportCompat?: {
        customizeMeta?: (meta: AddonMeta) => AddonMeta;
    };
}
type OwnType = AddonInstance & {
    _eaiAssertions(): void;
    _internalRegisterV2Addon(name: string, root: string, autoImportCompat?: ShimOptions['autoImportCompat']): void;
    _parentName(): string;
};
export declare function addonV1Shim(directory: string, options?: ShimOptions): {
    name: string;
    included(this: OwnType, ...args: unknown[]): void;
    treeForApp(this: AddonInstance): import("broccoli-funnel").Funnel | undefined;
    treeForAddon(): undefined;
    treeForPublic(this: AddonInstance): import("broccoli-funnel").Funnel | undefined;
    cacheKeyForTree(this: AddonInstance, treeType: string): string;
    isDevelopingAddon(this: AddonInstance): boolean;
    _eaiAssertions(this: OwnType): void;
    _internalRegisterV2Addon(this: OwnType, name: string, root: string, options?: ShimOptions["autoImportCompat"]): void;
    _parentName(this: OwnType): string;
    registerV2Addon(this: OwnType, name: string, root: string): void;
};
export {};
