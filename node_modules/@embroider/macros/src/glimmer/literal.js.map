{"version":3,"file":"literal.js","sourceRoot":"","sources":["literal.ts"],"names":[],"mappings":";;AAAA,0BA+BC;AA/BD,SAAwB,OAAO,CAAC,KAAU,EAAE,QAAa;IACvD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;QAC9B,OAAO,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IACD,IAAI,OAAO,KAAK,KAAK,SAAS,EAAE,CAAC;QAC/B,OAAO,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IACD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;QAC9B,OAAO,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IACD,IAAI,KAAK,KAAK,IAAI,EAAE,CAAC;QACnB,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IACD,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;QACxB,OAAO,QAAQ,CAAC,SAAS,EAAE,CAAC;IAC9B,CAAC;IACD,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;QACzB,OAAO,QAAQ,CAAC,KAAK,CACnB,OAAO,EACP,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CACjD,CAAC;IACJ,CAAC;IACD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;QAC9B,OAAO,QAAQ,CAAC,KAAK,CACnB,MAAM,EACN,SAAS,EACT,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC7F,CAAC;IACJ,CAAC;IAED,MAAM,IAAI,KAAK,CAAC,kDAAkD,KAAK,EAAE,CAAC,CAAC;AAC7E,CAAC","sourcesContent":["export default function literal(value: any, builders: any): any {\n  if (typeof value === 'number') {\n    return builders.number(value);\n  }\n  if (typeof value === 'boolean') {\n    return builders.boolean(value);\n  }\n  if (typeof value === 'string') {\n    return builders.string(value);\n  }\n  if (value === null) {\n    return builders.null();\n  }\n  if (value === undefined) {\n    return builders.undefined();\n  }\n  if (Array.isArray(value)) {\n    return builders.sexpr(\n      'array',\n      value.map(element => literal(element, builders))\n    );\n  }\n  if (typeof value === 'object') {\n    return builders.sexpr(\n      'hash',\n      undefined,\n      builders.hash(Object.entries(value).map(([k, v]) => builders.pair(k, literal(v, builders))))\n    );\n  }\n\n  throw new Error(`don't know how to emit a literal form of value ${value}`);\n}\n"]}