{"version":3,"file":"deprecation-support.js","sources":["../src/deprecation-support.ts"],"sourcesContent":["import { deprecate } from '@ember/debug';\n\nimport { dependencySatisfies, importSync, macroCondition } from '@embroider/macros';\n\nimport { DEPRECATE_EMBER_INFLECTOR } from '@warp-drive/build-config/deprecations';\n\nimport { defaultRules as WarpDriveDefaults } from './-private/string/inflections';\nimport { irregular, plural, singular, uncountable } from './string';\n\nif (DEPRECATE_EMBER_INFLECTOR) {\n  if (macroCondition(dependencySatisfies('ember-inflector', '*'))) {\n    const Inflector = (importSync('ember-inflector') as { default: typeof import('ember-inflector').default }).default;\n    const { inflector } = Inflector;\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const originalPlural = inflector.plural;\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const originalSingular = inflector.singular;\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const originalIrregular = inflector.irregular;\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const originalUncountable = inflector.uncountable;\n\n    // copy over any already registered rules\n    type DefaultRules = {\n      plurals: [RegExp, string][];\n      singular: [RegExp, string][];\n      irregularPairs: [string, string][];\n      uncountable: string[];\n    };\n    type InternalRules = {\n      plurals: [RegExp, string][];\n      singular: [RegExp, string][];\n\n      // [str1, str2] =>\n      // { [str1.lower]: str2 }\n      // { [str2.lower]: str2 }\n      irregular: Record<string, string>;\n\n      // [str1, str2] =>\n      // { [str2.lower]: str1 }\n      // { [str1.lower]: str1 }\n      irregularInverse: Record<string, string>;\n\n      // lower cased string\n      uncountable: Record<string, boolean>;\n    };\n\n    // ember-inflector mutates the default rules arrays\n    // with user supplied rules, so we keep track of what\n    // is default via our own list.\n    const defaultPluralKeys = new Set<string>();\n    const defaultSingularKeys = new Set<string>();\n    WarpDriveDefaults.plurals.forEach(([regex]) => {\n      defaultPluralKeys.add(regex.toString());\n    });\n    WarpDriveDefaults.singular.forEach(([regex]) => {\n      defaultSingularKeys.add(regex.toString());\n    });\n\n    const { defaultRules } = Inflector as unknown as { defaultRules: DefaultRules };\n    const { rules } = inflector as unknown as { rules: InternalRules };\n\n    const irregularMap = new Map<string, string>();\n    const toIgnore = new Set<string>();\n    const uncountableSet = new Set(defaultRules.uncountable);\n\n    defaultRules.irregularPairs.forEach(([single, plur]) => {\n      irregularMap.set(single.toLowerCase(), plur);\n      toIgnore.add(plur.toLowerCase());\n    });\n    const irregularLookups = new Map<string, string>();\n    Object.keys(rules.irregular).forEach((single) => {\n      const plur = rules.irregular[single];\n      irregularLookups.set(single, plur);\n    });\n\n    // load plurals\n    rules.plurals.forEach(([regex, replacement]) => {\n      if (defaultPluralKeys.has(regex.toString())) {\n        return;\n      }\n\n      plural(regex, replacement);\n\n      deprecate(\n        `WarpDrive/EmberData no longer uses ember-inflector for pluralization.\\nPlease \\`import { plural } from '@ember-data/request-utils/string';\\` instead to register a custom pluralization rule for use with EmberData.`,\n        false,\n        {\n          id: 'warp-drive.ember-inflector',\n          until: '6.0.0',\n          for: 'warp-drive',\n          since: {\n            enabled: '5.3.4',\n            available: '4.13',\n          },\n          url: 'https://deprecations.emberjs.com/id/warp-drive.ember-inflector',\n        }\n      );\n    });\n\n    // load singulars\n    rules.singular.forEach(([regex, replacement]) => {\n      if (defaultSingularKeys.has(regex.toString())) {\n        return;\n      }\n\n      singular(regex, replacement);\n\n      deprecate(\n        `WarpDrive/EmberData no longer uses ember-inflector for singularization.\\nPlease \\`import { singular } from '@ember-data/request-utils/string';\\` instead to register a custom singularization rule for use with EmberData.`,\n        false,\n        {\n          id: 'warp-drive.ember-inflector',\n          until: '6.0.0',\n          for: 'warp-drive',\n          since: {\n            enabled: '5.3.4',\n            available: '4.13',\n          },\n          url: 'https://deprecations.emberjs.com/id/warp-drive.ember-inflector',\n        }\n      );\n    });\n\n    // load irregulars\n    Object.keys(rules.irregular).forEach((single) => {\n      const plur = rules.irregular[single];\n      const defaultPlur = irregularMap.get(single);\n      if (defaultPlur && defaultPlur === plur) {\n        return;\n      }\n\n      if (toIgnore.has(single)) {\n        return;\n      }\n\n      const actualSingle = irregularLookups.get(plur.toLowerCase()) || single;\n      toIgnore.add(plur.toLowerCase());\n      irregular(actualSingle, plur);\n\n      deprecate(\n        `WarpDrive/EmberData no longer uses ember-inflector for irregular rules.\\nPlease \\`import { irregular } from '@ember-data/request-utils/string';\\` instead to register a custom irregular rule for use with EmberData for '${actualSingle}' <=> '${plur}'.`,\n        false,\n        {\n          id: 'warp-drive.ember-inflector',\n          until: '6.0.0',\n          for: 'warp-drive',\n          since: {\n            enabled: '5.3.4',\n            available: '4.13',\n          },\n          url: 'https://deprecations.emberjs.com/id/warp-drive.ember-inflector',\n        }\n      );\n    });\n\n    // load uncountables\n    Object.keys(rules.uncountable).forEach((word) => {\n      if (uncountableSet.has(word) || rules.uncountable[word] !== true) {\n        return;\n      }\n\n      uncountable(word);\n\n      deprecate(\n        `WarpDrive/EmberData no longer uses ember-inflector for uncountable rules.\\nPlease \\`import { uncountable } from '@ember-data/request-utils/string';\\` instead to register a custom uncountable rule for '${word}' for use with EmberData.`,\n        false,\n        {\n          id: 'warp-drive.ember-inflector',\n          until: '6.0.0',\n          for: 'warp-drive',\n          since: {\n            enabled: '5.3.4',\n            available: '4.13',\n          },\n          url: 'https://deprecations.emberjs.com/id/warp-drive.ember-inflector',\n        }\n      );\n    });\n\n    inflector.plural = function (...args: Parameters<typeof originalPlural>) {\n      plural(...args);\n\n      deprecate(\n        `WarpDrive/EmberData no longer uses ember-inflector for pluralization.\\nPlease \\`import { plural } from '@ember-data/request-utils/string';\\` instead to register a custom pluralization rule for use with EmberData.`,\n        false,\n        {\n          id: 'warp-drive.ember-inflector',\n          until: '6.0.0',\n          for: 'warp-drive',\n          since: {\n            enabled: '5.3.4',\n            available: '4.13',\n          },\n          url: 'https://deprecations.emberjs.com/id/warp-drive.ember-inflector',\n        }\n      );\n\n      return originalPlural.apply(inflector, args);\n    };\n\n    inflector.singular = function (...args: Parameters<typeof originalSingular>) {\n      singular(...args);\n\n      deprecate(\n        `WarpDrive/EmberData no longer uses ember-inflector for singularization.\\nPlease \\`import { singular } from '@ember-data/request-utils/string';\\` instead to register a custom singularization rule for use with EmberData.`,\n        false,\n        {\n          id: 'warp-drive.ember-inflector',\n          until: '6.0.0',\n          for: 'warp-drive',\n          since: {\n            enabled: '5.3.4',\n            available: '4.13',\n          },\n          url: 'https://deprecations.emberjs.com/id/warp-drive.ember-inflector',\n        }\n      );\n\n      return originalSingular.apply(inflector, args);\n    };\n\n    inflector.irregular = function (...args: Parameters<typeof originalIrregular>) {\n      irregular(...args);\n\n      deprecate(\n        `WarpDrive/EmberData no longer uses ember-inflector for irregular rules.\\nPlease \\`import { irregular } from '@ember-data/request-utils/string';\\` instead to register a custom irregular rule for use with EmberData.`,\n        false,\n        {\n          id: 'warp-drive.ember-inflector',\n          until: '6.0.0',\n          for: 'warp-drive',\n          since: {\n            enabled: '5.3.4',\n            available: '4.13',\n          },\n          url: 'https://deprecations.emberjs.com/id/warp-drive.ember-inflector',\n        }\n      );\n\n      return originalIrregular.apply(inflector, args);\n    };\n\n    inflector.uncountable = function (...args: Parameters<typeof originalUncountable>) {\n      uncountable(...args);\n\n      deprecate(\n        `WarpDrive/EmberData no longer uses ember-inflector for uncountable rules.\\nPlease \\`import { uncountable } from '@ember-data/request-utils/string';\\` instead to register a custom uncountable rule for use with EmberData.`,\n        false,\n        {\n          id: 'warp-drive.ember-inflector',\n          until: '6.0.0',\n          for: 'warp-drive',\n          since: {\n            enabled: '5.3.4',\n            available: '4.13',\n          },\n          url: 'https://deprecations.emberjs.com/id/warp-drive.ember-inflector',\n        }\n      );\n\n      return originalUncountable.apply(inflector, args);\n    };\n  }\n}\n"],"names":["macroCondition","getGlobalConfig","WarpDrive","deprecations","DEPRECATE_EMBER_INFLECTOR","dependencySatisfies","Inflector","importSync","default","inflector","originalPlural","plural","originalSingular","singular","originalIrregular","irregular","originalUncountable","uncountable","defaultPluralKeys","Set","defaultSingularKeys","WarpDriveDefaults","plurals","forEach","regex","add","toString","defaultRules","rules","irregularMap","Map","toIgnore","uncountableSet","irregularPairs","single","plur","set","toLowerCase","irregularLookups","Object","keys","replacement","has","deprecate","id","until","for","since","enabled","available","url","defaultPlur","get","actualSingle","word","args","apply"],"mappings":"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"}