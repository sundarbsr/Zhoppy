declare module '@ember-data/request/fetch' {
  /**
   * A basic Fetch Handler which converts a request into a
   * `fetch` call presuming the response to be `json`.
   *
   * ```ts
   * import Fetch from '@ember-data/request/fetch';
   *
   * manager.use([Fetch]);
   * ```
   *
   * @module @ember-data/request/fetch
   * @main @ember-data/request/fetch
   */
  import { type Context } from '@ember-data/request/-private/context';
  interface FastbootRequest {
      protocol: string;
      host: string;
  }
  interface FastBoot {
      require(moduleName: string): unknown;
      isFastBoot: boolean;
      request: FastbootRequest;
  }
  global {
      const FastBoot: undefined | FastBoot;
  }
  /**
   * A basic handler which converts a request into a
   * `fetch` call presuming the response to be `json`.
   *
   * ```ts
   * import Fetch from '@ember-data/request/fetch';
   *
   * manager.use([Fetch]);
   * ```
   *
   * @class Fetch
   * @public
   */
  const Fetch: {
      request<T>(context: Context): Promise<T>;
  };
  export default Fetch;
}
//# sourceMappingURL=fetch.d.ts.map