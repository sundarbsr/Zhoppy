declare module '@ember-data/request/-private/utils' {
  import type { RequestInfo, StructuredDataDocument } from '@warp-drive/core-types/request';
  import { ContextOwner } from '@ember-data/request/-private/context';
  import type { DeferredFuture, Future, GodContext, Handler } from '@ember-data/request/-private/types';
  export const IS_CACHE_HANDLER: "___(unique) Symbol(IS_CACHE_HANDLER)";
  export function curryFuture<T>(owner: ContextOwner, inbound: Future<T>, outbound: DeferredFuture<T>): Future<T>;
  export interface HttpErrorProps extends DOMException {
      code: number;
      name: string;
      status: number;
      statusText: string;
      isRequestError: boolean;
  }
  export function enhanceReason(reason?: string): DOMException;
  export function handleOutcome<T>(owner: ContextOwner, inbound: Promise<T | StructuredDataDocument<T>>, outbound: DeferredFuture<T>): Future<T>;
  export function executeNextHandler<T>(wares: Readonly<Handler[]>, request: RequestInfo, i: number, god: GodContext): Future<T>;
}
//# sourceMappingURL=utils.d.ts.map