declare module '@ember-data/legacy-compat/legacy-network-handler/legacy-data-fetch' {
  import type Store from '@ember-data/store';
  import type { BaseFinderOptions } from '@ember-data/store/types';
  import type { StableRecordIdentifier } from '@warp-drive/core-types';
  import type { LegacyRelationshipField as RelationshipSchema } from '@warp-drive/core-types/schema/fields';
  import type { MinimumAdapterInterface } from '@ember-data/legacy-compat/legacy-network-handler/minimum-adapter-interface';
  export function _findHasMany(adapter: MinimumAdapterInterface, store: Store, identifier: StableRecordIdentifier, link: string | null | {
      href: string;
  }, relationship: RelationshipSchema, options: BaseFinderOptions): Promise<import("@warp-drive/core-types/identifier").StableExistingRecordIdentifier<string> | import("@warp-drive/core-types/identifier").StableExistingRecordIdentifier<string>[] | null>;
  export function _findBelongsTo(store: Store, identifier: StableRecordIdentifier, link: string | null | {
      href: string;
  }, relationship: RelationshipSchema, options: BaseFinderOptions): Promise<import("@warp-drive/core-types/identifier").StableExistingRecordIdentifier<string> | import("@warp-drive/core-types/identifier").StableExistingRecordIdentifier<string>[] | null>;
}
//# sourceMappingURL=legacy-data-fetch.d.ts.map