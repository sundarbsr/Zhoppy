{"version":3,"file":"serialize-into-hash-DIFDGeuT.js","sources":["../src/-private/utils/parse-response-headers.ts","../src/-private/utils/continue-on-reject.ts","../src/-private/utils/determine-body-promise.ts","../src/-private/utils/serialize-query-params.ts","../src/-private/utils/fetch.ts","../src/-private/utils/serialize-into-hash.ts"],"sourcesContent":["const newline = /\\r?\\n/;\n\nexport function parseResponseHeaders(headersString: string): Record<string, string> {\n  const headers = Object.create(null) as Record<string, string>;\n\n  if (!headersString) {\n    return headers;\n  }\n\n  const headerPairs: string[] = headersString.split(newline);\n\n  for (let i = 0; i < headerPairs.length; i++) {\n    const header = headerPairs[i];\n    let j = 0;\n    let foundSep = false;\n\n    for (; j < header.length; j++) {\n      if (header.charCodeAt(j) === 58 /* ':' */) {\n        foundSep = true;\n        break;\n      }\n    }\n\n    if (foundSep === false) {\n      continue;\n    }\n\n    const field = header.substring(0, j).trim();\n    const value = header.substring(j + 1, header.length).trim();\n\n    if (value) {\n      const lowerCasedField = field.toLowerCase();\n\n      headers[lowerCasedField] = value;\n      headers[field] = value;\n    }\n  }\n\n  return headers;\n}\n","/**\n * A utility function that returns a promise that resolves\n * even when the source promise rejects.\n *\n * @internal\n */\nexport function continueOnReject<T>(promise: Promise<T>): Promise<T> {\n  return Promise.resolve(promise).catch((e) => e as T);\n}\n","import { warn } from '@ember/debug';\n\nimport { DEBUG } from '@warp-drive/build-config/env';\n\nimport type { RequestData } from '../../rest';\nimport { continueOnReject } from './continue-on-reject';\n\ntype Payload = Error | Record<string, unknown> | unknown[] | string | undefined;\n\ninterface CustomSyntaxError extends SyntaxError {\n  payload: Payload;\n}\n\n/*\n * Function that always attempts to parse the response as json, and if an error is thrown,\n * returns `undefined` if the response is successful and has a status code of 204 (No Content),\n * or 205 (Reset Content) or if the request method was 'HEAD', and the plain payload otherwise.\n */\nfunction _determineContent(response: Response, requestData: JQueryAjaxSettings, payload: Payload): Payload {\n  let ret: Payload = payload;\n  let error: Error | null = null;\n\n  if (!response.ok) {\n    return payload;\n  }\n\n  const status = response.status;\n  const payloadIsEmpty = payload === '' || payload === null;\n  const statusIndicatesEmptyResponse = status === 204 || status === 205 || requestData.method === 'HEAD';\n\n  if (DEBUG) {\n    if (payloadIsEmpty && !statusIndicatesEmptyResponse) {\n      const message = `The server returned an empty string for ${requestData.method} ${requestData.url}, which cannot be parsed into a valid JSON. Return either null or {}.`;\n      if (payload === '') {\n        warn(message, {\n          id: 'ds.adapter.returned-empty-string-as-JSON',\n        });\n      }\n    }\n  }\n\n  if (response.ok && (statusIndicatesEmptyResponse || payloadIsEmpty)) {\n    return;\n  }\n\n  try {\n    ret = JSON.parse(payload as string) as Payload;\n  } catch (e) {\n    if (!(e instanceof SyntaxError)) {\n      return e as Error;\n    }\n    (e as CustomSyntaxError).payload = payload;\n    error = e;\n  }\n\n  if (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('This response was unable to be parsed as json.', payload);\n    }\n    return error;\n  }\n\n  return ret;\n}\n\nexport function determineBodyPromise(response: Response, requestData: RequestData): Promise<Payload> {\n  // response.text() may resolve or reject\n  // it is a native promise, may not have finally\n  return continueOnReject(response.text()).then((payload) => _determineContent(response, requestData, payload));\n}\n","import { assert } from '@warp-drive/build-config/macros';\n\nconst RBRACKET = /\\[\\]$/;\n\ninterface PlainObject {\n  [key: string]: string | PlainObject | PlainObject[] | string[];\n}\ntype ParamObject = { name: string; value: string };\n\nfunction isPlainObject<T>(obj: unknown): obj is T {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nfunction isPrimitiveArray(obj: unknown): obj is Array<PlainObject | string> {\n  return Array.isArray(obj);\n}\n\nfunction isParamsArray(obj: unknown): obj is ParamObject[] {\n  return Array.isArray(obj);\n}\n\nfunction buildParams<T extends PlainObject>(\n  prefix: string,\n  obj: ParamObject | ParamObject[] | Array<T | string> | T | string,\n  s: string[]\n) {\n  let i: number, len: number, key: keyof T & string;\n\n  if (prefix) {\n    if (isPrimitiveArray(obj)) {\n      for (i = 0, len = obj.length; i < len; i++) {\n        if (RBRACKET.test(prefix)) {\n          add(s, prefix, obj[i] as string);\n        } else {\n          buildParams(prefix + '[' + (typeof obj[i] === 'object' && obj[i] !== null ? i : '') + ']', obj[i], s);\n        }\n      }\n    } else if (isPlainObject<T>(obj)) {\n      for (key in obj) {\n        buildParams(prefix + '[' + key + ']', obj[key], s);\n      }\n    } else {\n      assert(\n        `query params cannot be a { name, value } pair if prefix is present`,\n        obj === null || typeof obj !== 'object'\n      );\n      add(s, prefix, obj);\n    }\n  } else if (isParamsArray(obj)) {\n    for (i = 0, len = obj.length; i < len; i++) {\n      add(s, obj[i].name, obj[i].value);\n    }\n  } else {\n    assert(`query params cannot be a string if no prefix is present`, typeof obj !== 'string');\n    assert(`query params should not be an array if no prefix is present`, !Array.isArray(obj));\n    assert(`query params should not be a { name, value } pair if no prefix is present`, isPlainObject<T>(obj));\n    for (key in obj) {\n      buildParams(key, obj[key], s);\n    }\n  }\n  return s;\n}\n\n/*\n * Helper function that turns the data/body of a request into a query param string.\n * This is directly copied from jQuery.param.\n */\nexport function serializeQueryParams(queryParamsObject: PlainObject | string): string {\n  return buildParams('', queryParamsObject, []).join('&');\n}\n\n/*\n * Part of the `serializeQueryParams` helper function.\n */\nfunction add(s: string[], k: string, v?: string | (() => string)) {\n  // Strip out keys with undefined value and replace null values with\n  // empty strings (mimics jQuery.ajax)\n  if (v === undefined) {\n    return;\n  } else if (v === null) {\n    v = '';\n  }\n\n  v = typeof v === 'function' ? v() : v;\n  s[s.length] = `${encodeURIComponent(k)}=${encodeURIComponent(v)}`;\n}\n","import { assert } from '@warp-drive/build-config/macros';\n\ntype FetchFunction = (input: RequestInfo, init?: RequestInit) => Promise<Response>;\n\nlet _fetch: (() => FetchFunction) | null = null;\ntype MockRequest = { protocol?: string; get(key: string): string | undefined };\nlet REQUEST: MockRequest = null as unknown as MockRequest;\n\nexport function getFetchFunction(): FetchFunction {\n  // return cached fetch function\n  if (_fetch !== null) {\n    return _fetch();\n  }\n\n  // grab browser native fetch if available, or global fetch if otherwise configured\n  if (typeof fetch === 'function') {\n    // fallback to using global fetch\n    _fetch = () => fetch;\n\n    /* global FastBoot */\n    // grab fetch from node-fetch\n  } else if (typeof FastBoot !== 'undefined') {\n    try {\n      const nodeFetch = FastBoot.require('node-fetch') as typeof fetch;\n\n      const httpRegex = /^https?:\\/\\//;\n      const protocolRelativeRegex = /^\\/\\//;\n\n      function parseRequest(request: MockRequest) {\n        if (request === null) {\n          throw new Error(\n            \"Trying to fetch with relative url but the application hasn't finished loading FastBootInfo, see details at https://github.com/ember-cli/ember-fetch#relative-url\"\n          );\n        }\n        // Old Prember version is not sending protocol\n        const protocol = request.protocol === 'undefined:' ? 'http:' : request.protocol;\n        return [request.get('host'), protocol];\n      }\n\n      function buildAbsoluteUrl(url: string) {\n        if (protocolRelativeRegex.test(url)) {\n          const [host] = parseRequest(REQUEST);\n          url = host + url;\n        } else if (!httpRegex.test(url)) {\n          const [host, protocol] = parseRequest(REQUEST);\n          url = protocol + '//' + host + url;\n        }\n        return url;\n      }\n\n      function patchedFetch(input: string | { href: string } | RequestInfo, options?: RequestInit) {\n        if (input && typeof input === 'object' && 'href' in input) {\n          const url = buildAbsoluteUrl(input.href);\n          const info = Object.assign({}, input, { url }) as unknown as RequestInfo;\n          return nodeFetch(info, options);\n        } else if (typeof input === 'string') {\n          const url = buildAbsoluteUrl(input);\n          return nodeFetch(url, options);\n        }\n\n        return nodeFetch(input, options);\n      }\n\n      _fetch = () => patchedFetch;\n    } catch {\n      throw new Error(`Unable to create a compatible 'fetch' for FastBoot with node-fetch`);\n    }\n  }\n\n  assert(`Cannot find a 'fetch' global and did not detect FastBoot.`, _fetch);\n\n  return _fetch();\n}\n\nexport function setupFastboot(fastBootRequest: MockRequest) {\n  REQUEST = fastBootRequest;\n}\n","import type { MinimumSerializerInterface, SerializerOptions } from '@ember-data/legacy-compat';\nimport { type Snapshot, upgradeStore } from '@ember-data/legacy-compat/-private';\nimport type Store from '@ember-data/store';\nimport type { ModelSchema } from '@ember-data/store/types';\nimport { assert } from '@warp-drive/build-config/macros';\n\ntype SerializerWithSerializeIntoHash = MinimumSerializerInterface & {\n  serializeIntoHash?(hash: object, modelClass: ModelSchema, snapshot: Snapshot, options?: SerializerOptions): void;\n};\n\nexport function serializeIntoHash(\n  store: Store,\n  modelClass: ModelSchema,\n  snapshot: Snapshot,\n  options: { includeId?: boolean } = { includeId: true }\n) {\n  upgradeStore(store);\n  const serializer: SerializerWithSerializeIntoHash | null = store.serializerFor(modelClass.modelName);\n\n  assert(`Cannot serialize record, no serializer defined`, serializer);\n\n  if (typeof serializer.serializeIntoHash === 'function') {\n    const data = {};\n    serializer.serializeIntoHash(data, modelClass, snapshot, options);\n    return data;\n  }\n\n  return serializer.serialize(snapshot, options);\n}\n"],"names":["newline","parseResponseHeaders","headersString","headers","Object","create","headerPairs","split","i","length","header","j","foundSep","charCodeAt","field","substring","trim","value","lowerCasedField","toLowerCase","continueOnReject","promise","Promise","resolve","catch","e","_determineContent","response","requestData","payload","ret","error","ok","status","payloadIsEmpty","statusIndicatesEmptyResponse","method","macroCondition","getGlobalConfig","WarpDrive","env","DEBUG","message","url","warn","id","JSON","parse","SyntaxError","console","determineBodyPromise","text","then","RBRACKET","isPlainObject","obj","prototype","toString","call","isPrimitiveArray","Array","isArray","isParamsArray","buildParams","prefix","s","len","key","test","add","Error","name","serializeQueryParams","queryParamsObject","join","k","v","undefined","encodeURIComponent","_fetch","REQUEST","getFetchFunction","fetch","FastBoot","nodeFetch","require","httpRegex","protocolRelativeRegex","parseRequest","request","protocol","get","buildAbsoluteUrl","host","patchedFetch","input","options","href","info","assign","setupFastboot","fastBootRequest","serializeIntoHash","store","modelClass","snapshot","includeId","upgradeStore","serializer","serializerFor","modelName","data","serialize"],"mappings":"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"}