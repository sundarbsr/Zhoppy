declare module '@warp-drive/core-types/params' {
  import type { Includes, TypedRecordInstance } from '@warp-drive/core-types/record';
  export type SerializablePrimitive = string | number | boolean | null;
  export type Serializable = SerializablePrimitive | SerializablePrimitive[];
  export type QueryParamsSerializationOptions = {
      arrayFormat?: 'bracket' | 'indices' | 'repeat' | 'comma';
  };
  export type QueryParamsSource<T = unknown> = ({
      include?: T extends TypedRecordInstance ? Includes<T>[] : string | string[];
  } & Record<Exclude<string, 'include'>, Serializable>) | URLSearchParams;
}
//# sourceMappingURL=params.d.ts.map